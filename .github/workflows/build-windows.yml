name: Build Windows App

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Python (for node-gyp)
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Visual Studio Build Tools + Windows SDK
        shell: pwsh
        run: |
          choco install -y visualstudio2022buildtools `
            --package-parameters "--add Microsoft.VisualStudio.Component.VC.CoreBuildTools `
            --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 `
            --add Microsoft.VisualStudio.Component.Windows10SDK.19041 `
            --add Microsoft.VisualStudio.Component.Windows11SDK.22621 `
            --quiet --norestart"
          choco install -y windows-sdk-10

      - name: Setup MSVC build environment
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Sanity check toolchain
        shell: pwsh
        run: |
          python --version
          node -v
          npm -v
          where cl.exe || echo "cl.exe not on PATH (msvc-dev-cmd should fix this)"

      # âœ… Set env vars for node-gyp & our conditional postinstall
      - name: Install printer module & rebuild natives for Electron
        run: |
          npm install @thesusheer/electron-printer@^2.0.4 --no-save
          npx electron-builder install-app-deps

      - name: Install deps (desktop build, no lockfile)
        run: npm install --include=optional

      # Install desktop-only native printer module (NOT in package.json) and rebuild for Electron
      - name: Install printer module & rebuild natives for Electron
        run: |
          npm install @thesusheer/electron-printer@^2.0.4 --no-save
          npx electron-builder install-app-deps

      - name: Build renderer (Vite)
        run: npm run build

      - name: Build Windows installer
        run: npm run desktop:build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            dist/*.exe
            dist/*.yml
            dist/*.blockmap
